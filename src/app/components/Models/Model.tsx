/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: Ikki_3d (https://sketchfab.com/ikki_3d)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/rubber-duck-f1de4fc390db4266a509b9739350512a
Title: Rubber duck
*/

import * as THREE from "three";
import React, { useEffect, useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
	nodes: {
		defaultMaterial: THREE.Mesh;
	};
	materials: {
		material: THREE.MeshStandardMaterial;
	};
};

export function Model(props: JSX.IntrinsicElements["group"]) {
	const { nodes, materials } = useGLTF("/models/rubber_duck.glb") as GLTFResult;

	const modelRef = useRef<THREE.Group>(null);

	const mouse = useRef(new THREE.Vector2());
	const targetPosition = new THREE.Vector3();
	const smoothedPosition = new THREE.Vector3();

	useEffect(() => {
		const handleMouseMove = (event: MouseEvent) => {
			mouse.current.x = (event.clientX / window.innerWidth) * 2 - 1;
			mouse.current.y = -(event.clientY / window.innerHeight) * 2 + 1;
		};

		window.addEventListener("mousemove", handleMouseMove);

		return () => {
			window.removeEventListener("mousemove", handleMouseMove);
		};
	}, []);

	useFrame(({ camera }) => {
		if (modelRef.current) {
			const raycaster = new THREE.Raycaster();
			raycaster.setFromCamera(mouse.current, camera);

			const plane = new THREE.Plane(new THREE.Vector3(0, 0, 1), -10);
			raycaster.ray.intersectPlane(plane, targetPosition);

			smoothedPosition.lerp(targetPosition, 0.1);

			modelRef.current.lookAt(smoothedPosition);
		}
	});

	return (
		<group ref={modelRef} {...props} dispose={null} position={[120, -100, -250]}>
			<mesh
				castShadow
				receiveShadow
				geometry={nodes.defaultMaterial.geometry}
				material={materials.material}
				position={[0, 95, 0]}
				rotation={[-Math.PI / 2, -.05, 0.3]}
				scale={[0.901, 1.086, 1.022]}
			/>
		</group>
	);
}

useGLTF.preload("/models/rubber_duck.glb");
